BizBlog
=======
Нужно реализовать ленту событий бизнеса.
Должна показываться по ссылке /biz/{biz_id}/blog.

Это частный случай, такая лента будет нужна для каждого объекта системы,
поэтому мы сделаем универсальный модуль, показывающий ленту событий для объекта.

Url:
/{object_alias}/{object_id}/blog
/{object_alias}/{object_id}/blog/filter/{param:value;param:value;...}


Контроллер:
blog_main.class.php
- index - отображаает ленту событий


Модель:
blog.class.php
- GetBlogData($object_alias, $object_id, $filter = array(), $page_no = 0, $per_page = ITEMS_PER_PAGE)

Для некоторых объектов, в том числе BIZ понадобится сделать альтернативный GetBlogData в соответствующей модели,
а потом на основании полученных в экшене {object_alias}, {object_id} использовать его, вместо стандартного.


Шаблон:
/html/blog/main_index.tpl - лента событий
- список событий содержащий общую информацию:
	- дата, время
	- автор
	- заголовок
	- брифтекст - часть основного текста, если он слишком большой
	- специфические данные по типу события
- у каждого типа события может быть свое оформление

/html/blog/context_index.tpl
- статистика
- постраничный вывод
- кнопки: "Post Message", "Compose Email", "Add Files"

/html/blog/rcontext_index.tpl
- фильтры:
	- типы событий, чекбоксы, список может отличаться от типа объекта
	- авторы
	- дата начала
	- дата конца
	- ключевое слово


Лэйаут:
/layouts/sidecolumn.tpl
- нужно разработать новый лэйаут, который будет использоваться в блоге, чате и письмах
- сейчас для этих целей используется rcolumn.tpl
- особенности:
	- хедер, включает в себя меню, заголовок страницы и брэдкрамб	
	- левая колонка, широкая, будет содержать контент и свою вертикальную полосу прокрутки
	- правую колонку нужно сделать шире, чем сейчас, там будут фильтры и, возможно, тоже будет полоса прокрутки


Источники данных:
- индексы сфинкса
- для общего случая нам нужны три индекса: emails, messages, attachments
- для частных случаев добавятся дополнительные источники данных
- все индексы должны иметь:
	- одинаковую структуру
	- уникальный идентификатор


Структура индекса:
- id (int) должен быть уникальными, поэтому не берется из таблицы а формируется: entity_id * 20 + entity_type
- entity_type - уникальный тип объекта
- entity_id - идентификатор объекта, попадающего в ленту
- title
- descriprion
- obejct_alias - crc32(object_alias)
- object_id
- user_id
- mailbox_id
- created_at
- created_by

- 20 - предопределенное количество уникальных объектов, которые планируем индексировать


Базовые индексы:
ix_blog_emails:
- основная таблица - email_mailboxes
- entity_type - 1

ix_blog_messages:
- основная таблица - message_users
- entity_type - 2

ix_blog_attachments:
- основная таблица - attachment_objects
- entity_type - 3


Для начала достаточно будет реализовать ленту из базовых индексов, затем будем расширять 
для специфических объектов специфическими индексами. В качестве примера посмотри реализацию: 
ll/models/topevent/GetListForUser, попроси Сашу Петрюка показать.